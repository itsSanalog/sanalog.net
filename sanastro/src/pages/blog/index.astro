---
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";
import BlogLayout from "../../layouts/BlogLayout.astro";
import Collapsible from "../../components/blog/Collapsible.astro";

const codeEntries = await getCollection("blog", ({ id }) => {
  return id.startsWith("code/");
});
codeEntries.sort((a, b) => {
  return (b.data.sortOrder ?? 0) - (a.data.sortOrder ?? 0);
});

const workEntries = await getCollection("blog", ({ id }) => {
  return id.startsWith("work/");
});
workEntries.sort((a, b) => {
  return (b.data.sortOrder ?? 0) - (a.data.sortOrder ?? 0);
});

const talkEntries = await getCollection("blog", ({ id }) => {
  return id.startsWith("talk/");
});
talkEntries.sort((a, b) => {
  return (b.data.sortOrder ?? 0) - (a.data.sortOrder ?? 0);
});

const featuredEntry = await getEntry("blog", "talk/hibernation");
---

<BlogLayout title="sanaBlog">
  <div class="wrap">
    <p>sanaBlog is <a href="https://joelhooks.com/digital-garden" target="_blank" class="extlink">a blog that is not</a>. The featured item today is:</p>
    <a href={ `/blog/${ featuredEntry.slug }` } class="plain">
      <h2 style="margin-bottom: 1rem; font-size: 1.5em">{ featuredEntry.data.title }</h2>
      <div class="small muted pb">
        <time datetime={ featuredEntry.data.publicationDate }>
          { featuredEntry.data.publicationDate?.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric'}) }
        </time>
      </div>
      <div class="small muted">
        { featuredEntry.body.slice(0,200) }...
      </div>  
    </a>
    
    <hr class="mn2 ms2">

    <Collapsible name="code( );">
      { codeEntries.map((entry) => ( //doc: https://docs.astro.build/en/guides/content-collections/#using-content-in-astro-templates
          <a href={ `/blog/${ entry.slug }` } class="plain">
            <Image src={ entry.data.cover } alt={ entry.data.coverAlt } />
            {/* use 'entry.data.cover.src' as src if using native <img> tag */}
            <h2 class="mt mb0">{ entry.data.title }</h2>
            <p class="mt small muted">{ entry.data.description }</p>
          </a>
        )) }
    </Collapsible>

    <Collapsible name="work">
      { workEntries.map((entry) => (
          <a href={ `/blog/${ entry.slug }` } class="plain">
            <Image src={ entry.data.cover } alt={ entry.data.coverAlt } />
            <h2 class="mt mb0">{ entry.data.title }</h2>
            <p class="mt small muted">{ entry.data.description }</p>
          </a>
        )) }
    </Collapsible>
    
    <Collapsible name="talk..">
      { talkEntries.map((entry) => (
          <a href={ `/blog/${ entry.slug }` } class="plain">
            <Image src={ entry.data.cover } alt={ entry.data.coverAlt } />
            <h2 class="mt mb0">{ entry.data.title }</h2>
            <p class="mt small muted">{ entry.data.description }</p>
          </a>
        )) }
    </Collapsible>

    <div class="mn2">
      <!-- <span class="muted mmr">permanent links:</span> -->
      <a href="/blog/reviews" class="blog-button mmr">reviews</a>
      <a href="/blog/gallery" class="blog-button mmr">gallery</a>
      <a href="/blog/tools" class="blog-button mmr">tools</a>
      <a href="/blog/todo" class="blog-button mmr">to-do</a>
      <a href="/blog/links" class="blog-button">links</a>
    </div>
  </div>
</BlogLayout>



<style>
  .blog-button {
    padding: 0.3em 0.6em;
    border-radius: 4px;
    cursor: pointer;
    background-color: transparent;
    color: var(--color-tx-muted);
    font-size: 1.5em;
    font-weight: bold;
    /* text-decoration: none; */
  }

  .blog-button:hover {
    background-color: var(--color-ui-hover);
    color: var(--color-action);
  }
</style>