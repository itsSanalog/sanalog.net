---
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";
import BlogLayout from "../../layouts/BlogLayout.astro";
import Collapsible from "../../components/blog/Collapsible.astro";

const codeEntries = await getCollection("blog", ({ id }) => {
  return id.startsWith("code/");
});
const makeEntries = await getCollection("blog", ({ id }) => {
  return id.startsWith("work/");
});
const talkEntries = await getCollection("blog", ({ id }) => {
  return id.startsWith("talk/");
});
const testEntries = talkEntries.sort((a, b) => {
  return b.data.sortOrder - a.data.sortOrder;
});
const featuredEntry = await getEntry("blog", "talk/cold-game");
---
<BlogLayout title="sanaBlog">
  <p class="muted">Featured</p>
  <a href={ `/blog/${ featuredEntry.slug }` } class="plain">
    <h2>{ featuredEntry.data.title }</h2>
    <div class="small muted pb">
      <time datetime={ featuredEntry.data.publicationDate }>
        { featuredEntry.data.publicationDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric'}) }
      </time>
    </div>
    <div class="small muted">
      { featuredEntry.body.slice(0,200) }...
    </div>  
  </a>

  <hr class="mn2 ms2">

  <Collapsible name="code( );">
    {
      codeEntries.map((entry) => ( //doc: https://docs.astro.build/en/guides/content-collections/#using-content-in-astro-templates
      <a href={ `/blog/${ entry.slug }` } class="plain">
        <Image src={ entry.data.cover } alt={ entry.data.coverAlt } />
        {/* use 'entry.data.cover.src' as src if using native <img> tag */}
        <h2>{ entry.data.title }</h2>
        <p>{ entry.data.description }</p>
      </a>
    ))
  }
  </Collapsible>
  <Collapsible name="work">
    {
      makeEntries.map((entry) => (
      <a href={ `/blog/${ entry.slug }` } class="plain">
        <Image src={ entry.data.cover } alt={ entry.data.coverAlt } />
        <h2>{ entry.data.title }</h2>
        <p>{ entry.data.description }</p>
      </a>
    ))
  }
  </Collapsible>
  <Collapsible name="talk..">
    {
      talkEntries.map((entry) => (
      <a href={ `/blog/${ entry.slug }` } class="plain">
        <Image src={ entry.data.cover } alt={ entry.data.coverAlt } />
        <h2>{ entry.data.title }</h2>
        <p>{ entry.data.description }</p>
      </a>
    ))
  }
  </Collapsible>
  
  <hr class="mn2 ms2">

</BlogLayout>